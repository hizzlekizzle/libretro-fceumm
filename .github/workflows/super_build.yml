name: FCEUmm-libretro Build

on:
  # Trigger the workflow on push,
  # but only for the master branch
  push:
    branches:
      - master
  watch: # this is a hack that lets repo owners trigger a build by starring
    types: [started]
    if: github.actor == github.event.repository.owner.login

jobs:
  Linux_Build:
    runs-on: ubuntu-latest

    steps:
    - name: Install Dependencies (Linux)
      run: sudo apt-get install build-essential git zlib1g-dev
    - uses: actions/checkout@v2
#    - name: Fetch libretro-super
#      run: git clone https://github.com/libretro/libretro-super.git
#    - name: Fetch the core source
#      working-directory: libretro-super
#      run: ./libretro-fetch.sh fceumm
    - name: Build the core
#      working-directory: libretro-super
#      run: ./libretro-build.sh fceumm
      run: make -f Makefile.libretro -j8
    - name: retro-strip binary
      run: wget https://raw.githubusercontent.com/libretro/libretro-super/master/retrolink.sh && ./retrolink.sh fceumm_libretro.so
#    - name: Move lib out of libretro-super structure
#      run: cp libretro-super/dist/*/fceumm_libretro* ./
    - name: Zip it up
      run: zip -9 fceumm_libretro.so.zip fceumm_libretro.so
    
    - name: Upload core
      if: ${{ success() }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: fceumm_libretro.so.zip
        tag: Linux_x86_64_latest
        asset_name: fceumm_libretro.so.zip
        overwrite: true


  Windows_Build:
    runs-on: windows-latest

    steps:
# Set up the Windows build environment and download deps
    - uses: numworks/setup-msys2@v1
      with:
        msystem: MINGW64
    - run: msys2do pacman -S --noconfirm --disable-download-timeout --needed git make mingw-w64-x86_64-binutils mingw-w64-x86_64-toolchain mingw-w64-x86_64-zlib mingw-w64-x86_64-pkg-config zip
# Start the build
    - uses: actions/checkout@v2
    - name: Fetch libretro-super
      run: msys2do git clone https://github.com/libretro/libretro-super.git
    - name: Fetch the core source
      working-directory: libretro-super
      run: msys2do ./libretro-fetch.sh fceumm
    - name: Build the core
      working-directory: libretro-super
      run: msys2do ./libretro-build.sh fceumm
    - name: Move lib out of libretro-super structure
      run: msys2do cp libretro-super/dist/*/fceumm_libretro* ./
    - name: Windows zip it up
      run: msys2do zip -9 fceumm_libretro.dll.zip fceumm_libretro.dll
    
    - name: Upload core
      if: ${{ success() }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: fceumm_libretro.dll.zip
        tag: Windows_64bit_latest
        asset_name: fceumm_libretro.dll.zip
        overwrite: true
        
  macOS_Build:
    runs-on: macos-latest

    steps:
# Start the build
    - uses: actions/checkout@v2
    - name: Fetch libretro-super
      run: git clone https://github.com/libretro/libretro-super.git
    - name: Fetch the core source
      working-directory: libretro-super
      run: ./libretro-fetch.sh fceumm
    - name: Build the core
      working-directory: libretro-super
      run: ./libretro-build.sh fceumm
    - name: Move lib out of libretro-super structure
      run: cp libretro-super/dist/*/fceumm_libretro* ./
    - name: Zip it up
      run: zip -9 fceumm_libretro.dylib.zip fceumm_libretro.dylib
    
    - name: Upload core
      if: ${{ success() }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: fceumm_libretro.dylib.zip
        tag: macOS_x86_64_latest
        asset_name: fceumm_libretro.dylib.zip
        overwrite: true

#  Android_ARM64_Build:
#    runs-on: ubuntu-latest

#    steps:
#    - name: Install Dependencies (Linux)
#      run: sudo apt-get install build-essential git zlib1g-dev
#    - shell: bash
#      run: mkdir toolchains
#    - name: specify NDK
#      uses: ravinderjangra/android-ndk-toolchain-setup@0.2
#      with:
#        api: '18'
#        arch: 'arm'
#        install-location: 'toolchains'
#        force: true
#    - run: sudo mv toolchains /
#    - uses: actions/checkout@v2
#    - name: Fetch libretro-super
#      run: git clone https://github.com/libretro/libretro-super.git
#    - name: Fetch the core source
#      working-directory: libretro-super
#      run: ./libretro-fetch.sh fceumm
#    - name: Build the core
#      working-directory: libretro-super
#      run: ./libretro-build-android-armeabi_v7a.sh  fceumm
#    - name: Move lib out of libretro-super structure
#      run: cp libretro-super/dist/*/fceumm_libretro* ./
#    - name: Zip it up
#      run: zip -9 fceumm_libretro.so.zip fceumm_libretro.so
    
#    - name: Upload core
#      if: ${{ success() }}
#      uses: svenstaro/upload-release-action@v2
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        file: fceumm_libretro.so.zip
#        tag: Android_arm_latest
#        asset_name: fceumm_libretro.so.zip
#        overwrite: true
